share volumes:
	> docker run --rm -d -p 3001:3001 --name api-cont-2 --volumes-from api-cont-1  api-image:1.0.0

volumes:
b. named volume:
	Note: --rm flag while starting a container has no effect on named volume

	>docker run -d -p 3001:3001 --name api-cont-2 --mount source=feedback,target=/app/feedback  api-image:1.0.0

	or
	>docker run -d -p 3001:3001 --name api-cont-2 -v feedback:/app/feedback  api-image:1.0.0

create a named volume independent of any container:
>docker volume create <vol-name>

attach the volume with a container
docker run -d -p 3001:3001 --name api-cont-2 -v feedback:/app/feedback  api-image:1.0.0

using anonymous and named volume for the same container:
>docker run -d --rm -p 3000:3001 --name api-cont-1 -v feedback:/app/feedback -v /app/temp api-image:1.0.0

remove a volume:
>docker volume rm <vol-name/id>


c. Bind Mounts:
----------------------------
bind host system file path to a app file path running inside a container

/run/desktop/mnt/host/d/training/siemens-dockerk8s-3rdFeb2025/codes/day-2/data-volumes-app/pages⁠

d. TMPFS mounts


clear the build cache (all and forcefully):
-----------------------------------------------
>docker buildx prune --force

>docker build -t api-image .