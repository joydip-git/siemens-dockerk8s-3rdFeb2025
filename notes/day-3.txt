docker build -t api-image:1.0.0 .
docker volume create feedback
docker network create fav-network

docker run 
	-d
	--rm
	--name api-cont-1
	-p 3000:3002
	-e PORT=3002
	--env-file .env
	-v feedback:/app/feedback
	-v temp:/app/temp
	-v d:/...../app-name:/app
	--tmpfs /app/node_modules
	--network fav-network
	api-image:1.0.0



config based
	docker-compose.yaml => 

docker-compose tool => up and down

to run services:
docker-compose up -d

to stop all services:
docker-compose down

all containers will be part of a network created by default by the docker-compose tool
all containers run in --rm mode


Kubernetes:
------------------------------
1. kubectl:will send instructions to the master node in the cluster....
2. minikube: set up the dummy cluster

run the powershell in admin mode for the following:

chocolatey installation:(package manager for windows)

>Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

kubectl installtion:
>choco install kubernetes-cli

Test to ensure the version you installed is up-to-date
>kubectl version --client


minikube installation:
>choco install minikube

start the cluster
>minikube start